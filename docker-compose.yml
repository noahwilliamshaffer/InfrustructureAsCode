version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cloudops-postgres
    environment:
      POSTGRES_DB: cloudops_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cloudops-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: cloudops-backend
    environment:
      NODE_ENV: development
      PORT: 8080
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/cloudops_db
      FRONTEND_URL: http://localhost:3000
    ports:
      - "8080:8080"
    volumes:
      - ./apps/backend/src:/app/src
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cloudops-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
      target: runner
    container_name: cloudops-frontend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8080
    ports:
      - "3000:3000"
    volumes:
      - ./apps/frontend/src:/app/src
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - cloudops-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  cloudops-network:
    driver: bridge